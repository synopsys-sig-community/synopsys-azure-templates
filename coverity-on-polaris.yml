parameters:
  polaris_url: ""
  polaris_token: ""
  security_gate_args: "--new"

jobs:
  - job: CoverityOnPolaris

    variables:
      POLARIS_URL: ${{ parameters.polaris_url }}
      POLARIS_ACCESS_TOKEN: ${{ parameters.polaris_token }}
      SYNOPSYS_AZURE_TOOLS_REPO: https://github.com/synopsys-sig-community/synopsys-azure-tools
      SECURITY_GATE_ARGS: ${{ parameters.security_gate_args }}

    steps:
      # Linux
      - bash: |
          export DOWNLOAD=$POLARIS_URL/api/tools/polaris_cli-linux64.zip
          echo "##vso[task.setvariable variable=POLARIS_DOWNLOAD]$DOWNLOAD"
        condition: eq( variables['Agent.OS'], 'Linux' )
        displayName: Get Polaris Download for Linux
      # macOS
      - bash: |
          export DOWNLOAD=$POLARIS_URL/api/tools/polaris_cli-macosx.zip
          echo "##vso[task.setvariable variable=POLARIS_DOWNLOAD]$DOWNLOAD"
        condition: eq( variables['Agent.OS'], 'Darwin' )
        displayName: Get Polaris Download for macOS
      # Windows
      - powershell: |
          Set-Variable -Name DOWNLOAD -Value $POLARIS_URL/api/tools/polaris_cli-win64.zip
          echo "##vso[task.setvariable variable=POLARIS_DOWNLOAD]$DOWNLOAD"
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: Get Polaris Download for Windows

      - bash: echo POLARIS_URL=$POLARIS_URL POLARIS_ACCESS_TOKEN=$POLARIS_ACCESS_TOKEN POLARIS_DOWNLOAD=$POLARIS_DOWNLOAD

      - bash: curl -LsS -o polaris.zip $POLARIS_DOWNLOAD
        displayName: Download Polaris CLI

      - bash: unzip -j -d polaris-cli polaris.zip
        displayName: Unpack Polaris CLI

      - bash: ./polaris-cli/polaris --persist-config --co capture.build.buildCommands="null" --co capture.build.cleanCommands="null" --co capture.fileSystem="null" --co capture.coverity.autoCapture="enable" --co serverUrl=$POLARIS_URL configure
        displayName: Configure Polaris

      - bash: ./polaris-cli/polaris analyze -w
        displayName: Coverity SAST (Full analysis)

      - bash: git clone -q --depth 1 $SYNOPSYS_AZURE_TOOLS_REPO
        displayName: Get Synopsys Azure Tools

      - task: UsePythonVersion@0
        displayName: Get Python Interpreter
        inputs:
          versionSpec: '3.7'
          addToPath: true
        name: pyTools

      - script: $(pyTools.pythonLocation)/bin/pip install --upgrade pandas requests jsonapi_requests
        displayName: Install Python Module Dependencies

      - script: $(pyTools.pythonLocation)/bin/python synopsys-azure-tools/azure-polaris-issues-tool.py --url $POLARIS_URL --token $POLARIS_ACCESS_TOKEN --new --az-work-items --project jcroall-insecure-bank --debug 5
        displayName: Create Work Items for New Issues

      - script: $(pyTools.pythonLocation)/bin/python synopsys-azure-tools/azure-polaris-issues-tool.py --url $POLARIS_URL --token $POLARIS_ACCESS_TOKEN  --project jcroall-insecure-bank --debug 5 $SECURITY_GATE_ARGS --exit1-if-issues
        displayName: Check Polaris Security Gate
        # TODO: Also pass access token this way
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
